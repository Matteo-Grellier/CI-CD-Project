* 
* ==> Audit <==
* |---------|------|----------|---------|---------|---------------------|----------|
| Command | Args | Profile  |  User   | Version |     Start Time      | End Time |
|---------|------|----------|---------|---------|---------------------|----------|
| start   |      | minikube | matteog | v1.32.0 | 21 Mar 24 10:53 CET |          |
| start   |      | minikube | matteog | v1.32.0 | 21 Mar 24 10:59 CET |          |
| start   |      | minikube | matteog | v1.32.0 | 21 Mar 24 11:00 CET |          |
| start   |      | minikube | matteog | v1.32.0 | 21 Mar 24 11:01 CET |          |
| start   |      | minikube | matteog | v1.32.0 | 21 Mar 24 11:03 CET |          |
| start   |      | minikube | matteog | v1.32.0 | 21 Mar 24 11:03 CET |          |
|---------|------|----------|---------|---------|---------------------|----------|

* 
* ==> Last Start <==
* Log file created at: 2024/03/21 11:03:38
Running on machine: LanayrGamingComputer
Binary: Built with gc go1.21.5 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0321 11:03:38.808690  211527 out.go:296] Setting OutFile to fd 1 ...
I0321 11:03:38.808824  211527 out.go:348] isatty.IsTerminal(1) = true
I0321 11:03:38.808825  211527 out.go:309] Setting ErrFile to fd 2...
I0321 11:03:38.808827  211527 out.go:348] isatty.IsTerminal(2) = true
I0321 11:03:38.808934  211527 root.go:338] Updating PATH: /home/matteog/.minikube/bin
W0321 11:03:38.808973  211527 root.go:314] Error reading config file at /home/matteog/.minikube/config/config.json: open /home/matteog/.minikube/config/config.json: no such file or directory
I0321 11:03:38.809105  211527 out.go:303] Setting JSON to false
I0321 11:03:38.810545  211527 start.go:128] hostinfo: {"hostname":"LanayrGamingComputer","uptime":7648,"bootTime":1711007771,"procs":550,"os":"linux","platform":"arch","platformFamily":"arch","platformVersion":"rolling","kernelVersion":"6.8.1-arch1-1","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"90e9392c-45d3-479c-b21a-d26b2ce365d9"}
I0321 11:03:38.810579  211527 start.go:138] virtualization: kvm host
I0321 11:03:38.817280  211527 out.go:177] 😄  minikube v1.32.0 on Arch rolling
I0321 11:03:38.823267  211527 notify.go:220] Checking for updates...
I0321 11:03:38.823458  211527 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0321 11:03:38.823504  211527 driver.go:378] Setting default libvirt URI to qemu:///system
I0321 11:03:38.833201  211527 docker.go:122] docker version: linux-25.0.4:
I0321 11:03:38.833235  211527 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0321 11:03:38.856449  211527 info.go:266] docker info: {ID:b7d186c2-da27-4ae6-920b-1a63136e9c6d Containers:3 ContainersRunning:2 ContainersPaused:0 ContainersStopped:1 Images:3 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy true] [Native Overlay Diff false] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:43 OomKillDisable:false NGoroutines:70 SystemTime:2024-03-21 11:03:38.851539194 +0100 CET LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.1-arch1-1 OperatingSystem:EndeavourOS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:24 MemTotal:33346428928 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:LanayrGamingComputer Labels:[] ExperimentalBuild:false ServerVersion:25.0.4 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:dcf2847247e18caba8dce86522029642f60fe96b.m Expected:dcf2847247e18caba8dce86522029642f60fe96b.m} RuncCommit:{ID: Expected:} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:compose Path:/usr/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:2.24.7]] Warnings:<nil>}}
I0321 11:03:38.856500  211527 docker.go:295] overlay module found
I0321 11:03:38.862462  211527 out.go:177] ✨  Using the docker driver based on existing profile
I0321 11:03:38.874276  211527 start.go:298] selected driver: docker
I0321 11:03:38.874280  211527 start.go:902] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:7900 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/matteog:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0321 11:03:38.874314  211527 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0321 11:03:38.874350  211527 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0321 11:03:38.897980  211527 info.go:266] docker info: {ID:b7d186c2-da27-4ae6-920b-1a63136e9c6d Containers:3 ContainersRunning:2 ContainersPaused:0 ContainersStopped:1 Images:3 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy true] [Native Overlay Diff false] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:43 OomKillDisable:false NGoroutines:70 SystemTime:2024-03-21 11:03:38.893718165 +0100 CET LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.1-arch1-1 OperatingSystem:EndeavourOS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:24 MemTotal:33346428928 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:LanayrGamingComputer Labels:[] ExperimentalBuild:false ServerVersion:25.0.4 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:dcf2847247e18caba8dce86522029642f60fe96b.m Expected:dcf2847247e18caba8dce86522029642f60fe96b.m} RuncCommit:{ID: Expected:} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:compose Path:/usr/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:2.24.7]] Warnings:<nil>}}
I0321 11:03:38.898964  211527 cni.go:84] Creating CNI manager for ""
I0321 11:03:38.898973  211527 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0321 11:03:38.898976  211527 start_flags.go:323] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:7900 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/matteog:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0321 11:03:38.904976  211527 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0321 11:03:38.916669  211527 cache.go:121] Beginning downloading kic base image for docker with docker
I0321 11:03:38.922559  211527 out.go:177] 🚜  Pulling base image ...
I0321 11:03:38.928481  211527 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon
I0321 11:03:38.928481  211527 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0321 11:03:38.928498  211527 preload.go:148] Found local preload: /home/matteog/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4
I0321 11:03:38.928501  211527 cache.go:56] Caching tarball of preloaded images
I0321 11:03:38.928543  211527 preload.go:174] Found /home/matteog/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0321 11:03:38.928547  211527 cache.go:59] Finished verifying existence of preloaded tar for  v1.28.3 on docker
I0321 11:03:38.928607  211527 profile.go:148] Saving config to /home/matteog/.minikube/profiles/minikube/config.json ...
I0321 11:03:38.935236  211527 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon, skipping pull
I0321 11:03:38.935241  211527 cache.go:144] gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 exists in daemon, skipping load
I0321 11:03:38.935250  211527 cache.go:194] Successfully downloaded all kic artifacts
I0321 11:03:38.935268  211527 start.go:365] acquiring machines lock for minikube: {Name:mkb763f1973b1b8f5607ec9167b05bbc065a825a Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0321 11:03:38.935302  211527 start.go:369] acquired machines lock for "minikube" in 25.037µs
I0321 11:03:38.935308  211527 start.go:96] Skipping create...Using existing machine configuration
I0321 11:03:38.935311  211527 fix.go:54] fixHost starting: 
I0321 11:03:38.935435  211527 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0321 11:03:38.941462  211527 fix.go:102] recreateIfNeeded on minikube: state=Running err=<nil>
W0321 11:03:38.941467  211527 fix.go:128] unexpected machine state, will restart: <nil>
I0321 11:03:38.947386  211527 out.go:177] 🏃  Updating the running docker "minikube" container ...
I0321 11:03:38.953391  211527 machine.go:88] provisioning docker machine ...
I0321 11:03:38.953403  211527 ubuntu.go:169] provisioning hostname "minikube"
I0321 11:03:38.953420  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:38.959721  211527 main.go:141] libmachine: Using SSH client type: native
I0321 11:03:38.959898  211527 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x5cab71be1140] 0x5cab71be3e20 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I0321 11:03:38.959901  211527 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0321 11:03:39.074071  211527 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0321 11:03:39.074104  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.080783  211527 main.go:141] libmachine: Using SSH client type: native
I0321 11:03:39.080947  211527 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x5cab71be1140] 0x5cab71be3e20 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I0321 11:03:39.080952  211527 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0321 11:03:39.178476  211527 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0321 11:03:39.178485  211527 ubuntu.go:175] set auth options {CertDir:/home/matteog/.minikube CaCertPath:/home/matteog/.minikube/certs/ca.pem CaPrivateKeyPath:/home/matteog/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/matteog/.minikube/machines/server.pem ServerKeyPath:/home/matteog/.minikube/machines/server-key.pem ClientKeyPath:/home/matteog/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/matteog/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/matteog/.minikube}
I0321 11:03:39.178492  211527 ubuntu.go:177] setting up certificates
I0321 11:03:39.178496  211527 provision.go:83] configureAuth start
I0321 11:03:39.178524  211527 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0321 11:03:39.185206  211527 provision.go:138] copyHostCerts
I0321 11:03:39.185225  211527 exec_runner.go:144] found /home/matteog/.minikube/ca.pem, removing ...
I0321 11:03:39.185231  211527 exec_runner.go:203] rm: /home/matteog/.minikube/ca.pem
I0321 11:03:39.185268  211527 exec_runner.go:151] cp: /home/matteog/.minikube/certs/ca.pem --> /home/matteog/.minikube/ca.pem (1078 bytes)
I0321 11:03:39.185320  211527 exec_runner.go:144] found /home/matteog/.minikube/cert.pem, removing ...
I0321 11:03:39.185321  211527 exec_runner.go:203] rm: /home/matteog/.minikube/cert.pem
I0321 11:03:39.185332  211527 exec_runner.go:151] cp: /home/matteog/.minikube/certs/cert.pem --> /home/matteog/.minikube/cert.pem (1123 bytes)
I0321 11:03:39.185367  211527 exec_runner.go:144] found /home/matteog/.minikube/key.pem, removing ...
I0321 11:03:39.185368  211527 exec_runner.go:203] rm: /home/matteog/.minikube/key.pem
I0321 11:03:39.185380  211527 exec_runner.go:151] cp: /home/matteog/.minikube/certs/key.pem --> /home/matteog/.minikube/key.pem (1675 bytes)
I0321 11:03:39.185401  211527 provision.go:112] generating server cert: /home/matteog/.minikube/machines/server.pem ca-key=/home/matteog/.minikube/certs/ca.pem private-key=/home/matteog/.minikube/certs/ca-key.pem org=matteog.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0321 11:03:39.267952  211527 provision.go:172] copyRemoteCerts
I0321 11:03:39.267981  211527 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0321 11:03:39.268001  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.274859  211527 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/matteog/.minikube/machines/minikube/id_rsa Username:docker}
I0321 11:03:39.351435  211527 ssh_runner.go:362] scp /home/matteog/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I0321 11:03:39.363860  211527 ssh_runner.go:362] scp /home/matteog/.minikube/machines/server.pem --> /etc/docker/server.pem (1204 bytes)
I0321 11:03:39.375971  211527 ssh_runner.go:362] scp /home/matteog/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0321 11:03:39.388037  211527 provision.go:86] duration metric: configureAuth took 209.537294ms
I0321 11:03:39.388042  211527 ubuntu.go:193] setting minikube options for container-runtime
I0321 11:03:39.388107  211527 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0321 11:03:39.388127  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.395718  211527 main.go:141] libmachine: Using SSH client type: native
I0321 11:03:39.395901  211527 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x5cab71be1140] 0x5cab71be3e20 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I0321 11:03:39.395905  211527 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0321 11:03:39.488891  211527 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0321 11:03:39.488896  211527 ubuntu.go:71] root file system type: overlay
I0321 11:03:39.488942  211527 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0321 11:03:39.488965  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.495404  211527 main.go:141] libmachine: Using SSH client type: native
I0321 11:03:39.495557  211527 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x5cab71be1140] 0x5cab71be3e20 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I0321 11:03:39.495581  211527 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0321 11:03:39.595480  211527 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0321 11:03:39.595512  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.602723  211527 main.go:141] libmachine: Using SSH client type: native
I0321 11:03:39.602913  211527 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x5cab71be1140] 0x5cab71be3e20 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I0321 11:03:39.602919  211527 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0321 11:03:39.698152  211527 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0321 11:03:39.698158  211527 machine.go:91] provisioned docker machine in 744.764011ms
I0321 11:03:39.698162  211527 start.go:300] post-start starting for "minikube" (driver="docker")
I0321 11:03:39.698167  211527 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0321 11:03:39.698186  211527 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0321 11:03:39.698203  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.705108  211527 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/matteog/.minikube/machines/minikube/id_rsa Username:docker}
I0321 11:03:39.778017  211527 ssh_runner.go:195] Run: cat /etc/os-release
I0321 11:03:39.779612  211527 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0321 11:03:39.779619  211527 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0321 11:03:39.779622  211527 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0321 11:03:39.779624  211527 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0321 11:03:39.779628  211527 filesync.go:126] Scanning /home/matteog/.minikube/addons for local assets ...
I0321 11:03:39.779647  211527 filesync.go:126] Scanning /home/matteog/.minikube/files for local assets ...
I0321 11:03:39.779655  211527 start.go:303] post-start completed in 81.490477ms
I0321 11:03:39.779671  211527 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0321 11:03:39.779684  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.786228  211527 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/matteog/.minikube/machines/minikube/id_rsa Username:docker}
I0321 11:03:39.855653  211527 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0321 11:03:39.857847  211527 fix.go:56] fixHost completed within 922.534498ms
I0321 11:03:39.857852  211527 start.go:83] releasing machines lock for "minikube", held for 922.547211ms
I0321 11:03:39.857876  211527 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0321 11:03:39.864544  211527 ssh_runner.go:195] Run: cat /version.json
I0321 11:03:39.864566  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.864599  211527 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0321 11:03:39.864631  211527 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0321 11:03:39.870779  211527 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/matteog/.minikube/machines/minikube/id_rsa Username:docker}
I0321 11:03:39.871819  211527 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/matteog/.minikube/machines/minikube/id_rsa Username:docker}
I0321 11:03:39.938446  211527 ssh_runner.go:195] Run: systemctl --version
I0321 11:03:40.011863  211527 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0321 11:03:40.014314  211527 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0321 11:03:40.024274  211527 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0321 11:03:40.024306  211527 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0321 11:03:40.028947  211527 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0321 11:03:40.028953  211527 start.go:472] detecting cgroup driver to use...
I0321 11:03:40.028966  211527 detect.go:199] detected "systemd" cgroup driver on host os
I0321 11:03:40.029010  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0321 11:03:40.038106  211527 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0321 11:03:40.043440  211527 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0321 11:03:40.048530  211527 containerd.go:145] configuring containerd to use "systemd" as cgroup driver...
I0321 11:03:40.048543  211527 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0321 11:03:40.053644  211527 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0321 11:03:40.058711  211527 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0321 11:03:40.063784  211527 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0321 11:03:40.068777  211527 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0321 11:03:40.073423  211527 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0321 11:03:40.078406  211527 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0321 11:03:40.082672  211527 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0321 11:03:40.086923  211527 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0321 11:03:40.132400  211527 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0321 11:03:40.216979  211527 start.go:472] detecting cgroup driver to use...
I0321 11:03:40.216997  211527 detect.go:199] detected "systemd" cgroup driver on host os
I0321 11:03:40.217018  211527 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0321 11:03:40.223472  211527 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0321 11:03:40.223487  211527 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0321 11:03:40.229681  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0321 11:03:40.239229  211527 ssh_runner.go:195] Run: which cri-dockerd
I0321 11:03:40.240843  211527 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0321 11:03:40.245339  211527 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0321 11:03:40.254949  211527 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0321 11:03:40.291993  211527 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0321 11:03:40.335775  211527 docker.go:560] configuring docker to use "systemd" as cgroup driver...
I0321 11:03:40.335833  211527 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0321 11:03:40.345478  211527 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0321 11:03:40.389259  211527 ssh_runner.go:195] Run: sudo systemctl restart docker
I0321 11:03:41.971368  211527 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.582096174s)
I0321 11:03:41.971394  211527 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0321 11:03:42.019064  211527 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0321 11:03:42.068841  211527 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0321 11:03:42.115512  211527 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0321 11:03:42.158664  211527 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0321 11:03:42.211370  211527 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0321 11:03:42.263443  211527 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0321 11:03:42.295596  211527 start.go:519] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0321 11:03:42.295626  211527 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0321 11:03:42.297758  211527 start.go:540] Will wait 60s for crictl version
I0321 11:03:42.297772  211527 ssh_runner.go:195] Run: which crictl
I0321 11:03:42.299449  211527 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0321 11:03:42.320527  211527 start.go:556] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.7
RuntimeApiVersion:  v1
I0321 11:03:42.320546  211527 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0321 11:03:42.330814  211527 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0321 11:03:42.355669  211527 out.go:204] 🐳  Preparing Kubernetes v1.28.3 on Docker 24.0.7 ...
I0321 11:03:42.355713  211527 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0321 11:03:42.362606  211527 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0321 11:03:42.364688  211527 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0321 11:03:42.364706  211527 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0321 11:03:42.372792  211527 docker.go:671] Got preloaded images: -- stdout --
<none>:<none>
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0321 11:03:42.372797  211527 docker.go:601] Images already preloaded, skipping extraction
I0321 11:03:42.372831  211527 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0321 11:03:42.380758  211527 docker.go:671] Got preloaded images: -- stdout --
<none>:<none>
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0321 11:03:42.380763  211527 cache_images.go:84] Images are preloaded, skipping loading
I0321 11:03:42.380778  211527 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0321 11:03:42.403258  211527 cni.go:84] Creating CNI manager for ""
I0321 11:03:42.403264  211527 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0321 11:03:42.403273  211527 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0321 11:03:42.403281  211527 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.28.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0321 11:03:42.403340  211527 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.28.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0321 11:03:42.403371  211527 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.28.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0321 11:03:42.403394  211527 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.28.3
I0321 11:03:42.408257  211527 binaries.go:44] Found k8s binaries, skipping transfer
I0321 11:03:42.408274  211527 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0321 11:03:42.412557  211527 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0321 11:03:42.422069  211527 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0321 11:03:42.431081  211527 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2090 bytes)
I0321 11:03:42.440193  211527 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0321 11:03:42.441962  211527 certs.go:56] Setting up /home/matteog/.minikube/profiles/minikube for IP: 192.168.49.2
I0321 11:03:42.441970  211527 certs.go:190] acquiring lock for shared ca certs: {Name:mkc69b3b34d5e696f15ef309ef6e43c49e87809e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0321 11:03:42.442029  211527 certs.go:199] skipping minikubeCA CA generation: /home/matteog/.minikube/ca.key
I0321 11:03:42.442045  211527 certs.go:199] skipping proxyClientCA CA generation: /home/matteog/.minikube/proxy-client-ca.key
I0321 11:03:42.442073  211527 certs.go:315] skipping minikube-user signed cert generation: /home/matteog/.minikube/profiles/minikube/client.key
I0321 11:03:42.442091  211527 certs.go:315] skipping minikube signed cert generation: /home/matteog/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0321 11:03:42.442106  211527 certs.go:315] skipping aggregator signed cert generation: /home/matteog/.minikube/profiles/minikube/proxy-client.key
I0321 11:03:42.442160  211527 certs.go:437] found cert: /home/matteog/.minikube/certs/home/matteog/.minikube/certs/ca-key.pem (1679 bytes)
I0321 11:03:42.442171  211527 certs.go:437] found cert: /home/matteog/.minikube/certs/home/matteog/.minikube/certs/ca.pem (1078 bytes)
I0321 11:03:42.442181  211527 certs.go:437] found cert: /home/matteog/.minikube/certs/home/matteog/.minikube/certs/cert.pem (1123 bytes)
I0321 11:03:42.442190  211527 certs.go:437] found cert: /home/matteog/.minikube/certs/home/matteog/.minikube/certs/key.pem (1675 bytes)
I0321 11:03:42.442471  211527 ssh_runner.go:362] scp /home/matteog/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0321 11:03:42.454806  211527 ssh_runner.go:362] scp /home/matteog/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0321 11:03:42.467221  211527 ssh_runner.go:362] scp /home/matteog/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0321 11:03:42.479539  211527 ssh_runner.go:362] scp /home/matteog/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0321 11:03:42.492049  211527 ssh_runner.go:362] scp /home/matteog/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0321 11:03:42.504195  211527 ssh_runner.go:362] scp /home/matteog/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0321 11:03:42.516719  211527 ssh_runner.go:362] scp /home/matteog/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0321 11:03:42.528973  211527 ssh_runner.go:362] scp /home/matteog/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0321 11:03:42.541488  211527 ssh_runner.go:362] scp /home/matteog/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0321 11:03:42.553806  211527 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0321 11:03:42.562836  211527 ssh_runner.go:195] Run: openssl version
I0321 11:03:42.565401  211527 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0321 11:03:42.570527  211527 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0321 11:03:42.572283  211527 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Mar 21 10:02 /usr/share/ca-certificates/minikubeCA.pem
I0321 11:03:42.572296  211527 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0321 11:03:42.575474  211527 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0321 11:03:42.580056  211527 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0321 11:03:42.582021  211527 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0321 11:03:42.585224  211527 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0321 11:03:42.587960  211527 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0321 11:03:42.590735  211527 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0321 11:03:42.593782  211527 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0321 11:03:42.596508  211527 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0321 11:03:42.599259  211527 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:7900 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/matteog:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0321 11:03:42.599305  211527 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0321 11:03:42.607392  211527 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0321 11:03:42.611966  211527 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0321 11:03:42.616921  211527 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0321 11:03:42.616939  211527 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0321 11:03:42.621216  211527 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0321 11:03:42.621226  211527 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0321 11:03:42.695400  211527 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0321 11:03:42.695440  211527 kubeadm.go:322] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I0321 11:03:42.815103  211527 kubeadm.go:322] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I0321 11:03:42.829793  211527 out.go:204]     ▪ Generating certificates and keys ...
I0321 11:03:42.829853  211527 kubeadm.go:322] To see the stack trace of this error execute with --v=5 or higher
I0321 11:03:42.829867  211527 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0321 11:03:42.829880  211527 kubeadm.go:322] [preflight] Running pre-flight checks
I0321 11:03:42.829909  211527 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0321 11:03:42.829944  211527 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0321 11:03:42.829983  211527 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0321 11:03:42.830006  211527 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0321 11:03:42.830022  211527 kubeadm.go:322] [certs] Using existing ca certificate authority
I0321 11:03:42.830054  211527 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
W0321 11:03:42.830093  211527 out.go:239] 💢  initialization failed, will try again: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

I0321 11:03:42.830121  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I0321 11:03:44.555575  211527 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": (1.725442932s)
I0321 11:03:44.555607  211527 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0321 11:03:44.562296  211527 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0321 11:03:44.562325  211527 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0321 11:03:44.567396  211527 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0321 11:03:44.567421  211527 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0321 11:03:44.643562  211527 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0321 11:03:44.643605  211527 kubeadm.go:322] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I0321 11:03:44.769867  211527 kubeadm.go:322] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I0321 11:03:44.784522  211527 out.go:204]     ▪ Generating certificates and keys ...
I0321 11:03:44.784582  211527 kubeadm.go:322] To see the stack trace of this error execute with --v=5 or higher
I0321 11:03:44.784596  211527 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0321 11:03:44.784615  211527 kubeadm.go:322] [preflight] Running pre-flight checks
I0321 11:03:44.784640  211527 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0321 11:03:44.784672  211527 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0321 11:03:44.784701  211527 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0321 11:03:44.784723  211527 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0321 11:03:44.784739  211527 kubeadm.go:322] [certs] Using existing ca certificate authority
I0321 11:03:44.784781  211527 kubeadm.go:406] StartCluster complete in 2.185524947s
I0321 11:03:44.784786  211527 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0321 11:03:44.784802  211527 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I0321 11:03:44.784827  211527 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I0321 11:03:44.807911  211527 cri.go:89] found id: ""
I0321 11:03:44.807916  211527 logs.go:284] 0 containers: []
W0321 11:03:44.807919  211527 logs.go:286] No container was found matching "kube-apiserver"
I0321 11:03:44.807921  211527 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I0321 11:03:44.807949  211527 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I0321 11:03:44.829491  211527 cri.go:89] found id: ""
I0321 11:03:44.829496  211527 logs.go:284] 0 containers: []
W0321 11:03:44.829499  211527 logs.go:286] No container was found matching "etcd"
I0321 11:03:44.829502  211527 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I0321 11:03:44.829529  211527 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I0321 11:03:44.850980  211527 cri.go:89] found id: ""
I0321 11:03:44.850984  211527 logs.go:284] 0 containers: []
W0321 11:03:44.850986  211527 logs.go:286] No container was found matching "coredns"
I0321 11:03:44.850988  211527 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I0321 11:03:44.851007  211527 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I0321 11:03:44.873542  211527 cri.go:89] found id: ""
I0321 11:03:44.873545  211527 logs.go:284] 0 containers: []
W0321 11:03:44.873547  211527 logs.go:286] No container was found matching "kube-scheduler"
I0321 11:03:44.873550  211527 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I0321 11:03:44.873566  211527 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I0321 11:03:44.894727  211527 cri.go:89] found id: ""
I0321 11:03:44.894730  211527 logs.go:284] 0 containers: []
W0321 11:03:44.894732  211527 logs.go:286] No container was found matching "kube-proxy"
I0321 11:03:44.894734  211527 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I0321 11:03:44.894749  211527 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I0321 11:03:44.917177  211527 cri.go:89] found id: ""
I0321 11:03:44.917182  211527 logs.go:284] 0 containers: []
W0321 11:03:44.917184  211527 logs.go:286] No container was found matching "kube-controller-manager"
I0321 11:03:44.917186  211527 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I0321 11:03:44.917204  211527 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I0321 11:03:44.938970  211527 cri.go:89] found id: ""
I0321 11:03:44.938974  211527 logs.go:284] 0 containers: []
W0321 11:03:44.938976  211527 logs.go:286] No container was found matching "kindnet"
I0321 11:03:44.938981  211527 logs.go:123] Gathering logs for container status ...
I0321 11:03:44.938985  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0321 11:03:44.963046  211527 logs.go:123] Gathering logs for kubelet ...
I0321 11:03:44.963051  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0321 11:03:44.969757  211527 logs.go:123] Gathering logs for dmesg ...
I0321 11:03:44.969761  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0321 11:03:44.977189  211527 logs.go:123] Gathering logs for describe nodes ...
I0321 11:03:44.977193  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
W0321 11:03:45.006038  211527 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig": Process exited with status 1
stdout:

stderr:
E0321 10:03:45.001466   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.001670   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.002944   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.003079   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.004309   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?
 output: 
** stderr ** 
E0321 10:03:45.001466   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.001670   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.002944   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.003079   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0321 10:03:45.004309   19187 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?

** /stderr **
I0321 11:03:45.006051  211527 logs.go:123] Gathering logs for Docker ...
I0321 11:03:45.006055  211527 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
W0321 11:03:45.031133  211527 out.go:369] Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher
W0321 11:03:45.031141  211527 out.go:239] 
W0321 11:03:45.031178  211527 out.go:239] 💣  Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W0321 11:03:45.031188  211527 out.go:239] 
W0321 11:03:45.031620  211527 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0321 11:03:45.045887  211527 out.go:177] 
W0321 11:03:45.057665  211527 out.go:239] ❌  Exiting due to GUEST_START: failed to start node: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W0321 11:03:45.057680  211527 out.go:239] 
W0321 11:03:45.058111  211527 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0321 11:03:45.069466  211527 out.go:177] 

* 
* ==> Docker <==
* Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Mar 21 10:03:44 minikube cri-dockerd[14949]: time="2024-03-21T10:03:44Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                ATTEMPT             POD ID              POD

* 
* ==> describe nodes <==
* 
* ==> dmesg <==
* [Mar21 07:56] pci 0000:00:00.2: can't derive routing for PCI INT A
[  +0.000001] pci 0000:00:00.2: PCI INT A: not connected
[  +0.793713] ata1.00: supports DRM functions and may not be fully accessible
[  +0.004442] ata1.00: supports DRM functions and may not be fully accessible
[  +1.223426] acpi PNP0C14:03: duplicate WMI GUID 97845ED0-4E6D-11DE-8A39-0800200C9A66 (first instance was on PNP0C14:00)
[  +0.074962] hub 8-0:1.0: config failed, hub doesn't have any ports! (err -19)
[  +2.349314] platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[  +0.099980] asus_wmi: Failed to get WMI notify code: AE_NOT_FOUND
[  +0.000002] asus_wmi: Failed to get event during flush: -5
[  +4.380375] Bluetooth: hci1: HCI Enhanced Setup Synchronous Connection command is advertised, but not supported.

* 
* ==> kernel <==
*  10:04:13 up  2:08,  0 users,  load average: 0.41, 0.99, 1.12
Linux minikube 6.8.1-arch1-1 #1 SMP PREEMPT_DYNAMIC Sat, 16 Mar 2024 17:15:35 +0000 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.3 LTS"

* 
* ==> kubelet <==
* -- No entries --

